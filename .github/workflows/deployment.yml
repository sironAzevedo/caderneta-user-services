name: user service

on:
  push:
    branches: [ main ]

jobs:
    compile:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: build & Compile project
          run: mvn clean compile install -DskipTests
          
    test:
        runs-on: ubuntu-latest
        name: Running tests
        needs: compile
        steps:
          - uses: actions/checkout@v4
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: 'temurin'
              java-version: 17
          - name: Run unit tests
            run: mvn test
            
    docker:
        name: Publish - Docker Hub
        runs-on: ubuntu-latest
        needs: [test]
        steps:
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USER }}
              password: ${{ secrets.DOCKER_PASS }}

          - name: Publish to Docker Hub
            uses: docker/build-push-action@v5
            with:
              push: true
              tags: sirondba/user-services:latest
            
#    deploy:
#        runs-on: ubuntu-latest
#        name: Deploy Heroku
#        needs: docker
#        steps:
#        - uses: actions/checkout@v2
#        - name: Deploy to Heroku
#          uses: AkhileshNS/heroku-deploy@v3.8.8
#          with:
#            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#            heroku_email: ${{secrets.HEROKU_EMAIL}}
#            heroku_app_name: ${{secrets.HEROKU_APP}}
#
#    notifySlack:
#        name: Notify slack
#        runs-on: ubuntu-latest
#        needs: [deploy]
#        steps:
#        - uses: actions/checkout@v2
#        - name: Notify Slack
#          uses: drilonrecica/action-slack-notify@0.0.3
#          env:
#            SLACK_TITLE: Notify Deploy
#            SLACK_ICON: https://github.com/rtCamp.png?size=48
#            SLACK_MESSAGE: ${{ job.status }} 'A API caderneta-user-services:v${{github.run_number}}, já estar disponivel no ambiente de produção'
#            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            
    